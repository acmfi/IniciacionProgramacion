Funciones (antes de recursión):

* Función de máximo
* Función que compruebe si un año es bisiesto.
  Un año es bisiesto si es divisible entre 4 y, o es divisible entre 400 o no es divisble entre 100.
  (year % 4 == 0 && (year % 400 == 0 || year % 100 != 0)

Funciones (después de recursión):

* Función de potencia de enteros recursiva.

Arrays

* Función recursiva para multiplicar elementos de una array.
* Función que ordene 3 números devolviéndolos en una array de tamaño 3.

Control de flujo (después de switch):

* Función que cuente el número de repeticiones de un elemento en una 
array.
* Función que devuelva el número de impares que hay en una lista.
* Función que determina si un número es primo.
* Función que compruebe si una fecha es válida (teniendo en cuenta días de cada mes y años bisiestos)
* Función que borre las vocales de un string.


## Línea de los ejercicios

Uno de los puntos comunes entre la gente que asistirá al curso es la realización de ejercicios que tengan que ver con juegos/videojuegos. Por otro lado, también consideramos que suele ser muy satisfactorio el ver cómo tu programa interactúa con el ordenador y su entorno: lectura de ficheros, generándolos...

#### Aproximación A

Hacer un juego sencillo que lea de un fichero de configuración:
- Nombre de usuario
- Nivel o atributos

Movidas que hacer sobre esos ficheros: cifrarlos :D Para que nadie toque lo que no debe. Y luego el contra-taller de reversing para sacar la clave de descifrado.

### Aproximación B

Tenemos unos ficheros que pueden contener libros enteros. Podemos hacer un análisis sobre elementos del texto: número de frases, tabla de frecuencia de palabras...

Algo complementario a esto: se genera un texto aleatorio con un diccionario y vemos en qué se diferencian.
